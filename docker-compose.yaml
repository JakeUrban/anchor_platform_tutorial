version: "3.8"
services:
  db-init:
    container_name: db-init
    build: .
    env_file:
      - .env
    volumes:
      - ./app:/code/app
    command: poetry run flask --app app.server db upgrade
  business-server:
    container_name: business-server
    build: .
    command: poetry run flask --app app.server --debug run --host 0.0.0.0
    env_file:
      - .env
    volumes:
      - ./app:/code/app
    depends_on:
      db-init:
        condition: service_completed_successfully
    ports:
      - "5000:5000"
  anchor-platform:
    container_name: anchor-platform
    image: stellar/anchor-platform:edge
    command: --sep-server
    env_file:
      - .env
    volumes:
      - ./platform:/platform
    depends_on:
      - kafka
    ports:
      - "8080:8080"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
